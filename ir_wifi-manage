#include <ESP8266WiFi.h>
#include <IRremoteESP8266.h>
#include <IRrecv.h>
#include <IRsend.h>
#include <IRutils.h>

// Configuration Wi-Fi
const char* ssid = "Votre_SSID";
const char* password = "Votre_MotDePasse";

// Broches pour le récepteur et l'émetteur IR
const uint16_t kRecvPin = D5; // Récepteur IR (GPIO14)
const uint16_t kIrLed = D2;   // LED IR pour émission (GPIO4)

// Objets IR
IRrecv irrecv(kRecvPin);
IRsend irsend(kIrLed);
decode_results results;

// Tableau pour stocker les codes IR capturés
#define MAX_CODES 10
uint32_t storedCodes[MAX_CODES]; // Stocke jusqu'à 10 codes IR
String codeLabels[MAX_CODES];    // Noms des codes
int codeCount = 0;               // Nombre de codes capturés

// Serveur web
WiFiServer server(80);

void setup() {
  Serial.begin(115200);

  // Connexion Wi-Fi
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("\nConnecté au Wi-Fi");
  Serial.print("Adresse IP : ");
  Serial.println(WiFi.localIP());

  // Initialisation du récepteur et de l'émetteur IR
  irrecv.enableIRIn();
  irsend.begin();

  // Démarrage du serveur web
  server.begin();
  Serial.println("Serveur web démarré");
}

void loop() {
  // Capturer les signaux IR
  if (irrecv.decode(&results)) {
    if (codeCount < MAX_CODES) {
      storedCodes[codeCount] = results.value; // Stocker le code capturé
      codeLabels[codeCount] = "Code " + String(codeCount + 1); // Nom par défaut
      Serial.println("Code capturé : " + String(results.value, HEX));
      codeCount++;
    } else {
      Serial.println("Mémoire pleine, impossible de capturer plus de codes.");
    }
    irrecv.resume(); // Préparer pour le prochain signal
  }

  // Gestion des requêtes HTTP
  WiFiClient client = server.available();
  if (client) {
    String request = client.readStringUntil('\r');
    client.flush();

    // Vérifier si un signal doit être envoyé
    if (request.indexOf("/send?index=") != -1) {
      int index = request.substring(request.indexOf('=') + 1, request.indexOf(' ')).toInt();
      if (index >= 0 && index < codeCount) {
        irsend.sendNEC(storedCodes[index], 32); // Émettre le signal IR
        Serial.println("Signal envoyé : " + String(storedCodes[index], HEX));
      }
    }

    // Générer l'interface web
    client.print("HTTP/1.1 200 OK\r\nContent-Type: text/html\r\n\r\n");
    client.print("<!DOCTYPE html><html lang='fr'><head><meta charset='UTF-8'>");
    client.print("<title>Contrôle Infrarouge</title><style>body{font-family:Arial;text-align:center;}button{margin:10px;padding:10px 20px;}</style></head>");
    client.print("<body><h1>Contrôle IR</h1><h2>Signaux capturés :</h2>");

    // Ajouter des boutons pour chaque signal capturé
    for (int i = 0; i < codeCount; i++) {
      client.print("<button onclick=\"sendSignal(" + String(i) + ")\">" + codeLabels[i] + "</button><br>");
    }

    client.print("<script>");
    client.print("function sendSignal(index) {fetch('/send?index=' + index).then(response => alert('Signal ' + index + ' envoyé!'));}");
    client.print("</script></body></html>");
  }
}
